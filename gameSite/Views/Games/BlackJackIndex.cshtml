@model gameSite.Models.BlackJackViewModel
@{
    ViewBag.Title = "BlackJackIndex";
}
<div class="jumbotron">
    <h1>Round: @Model.Round</h1>
    <p class="lead">Current Player Count: @Model.PlayerCount |||  Player Card Drawn: @Model.PlayerCardDrawn</p>
    <p class="lead">Current Bet: @Model.PlayerBet</p>
    <p class="lead">Current House Count: @Model.HouseCount ||| House Card Drawn: @Model.HouseCardDrawn</p>
    @if (Model.GameEnd == true)
    {
        if (Model.DidPlayerWin == true)
        {
            <h1>You Win</h1>
        }
        else if (Model.DidPlayerWin == false)
        {
            <h1>You Lose</h1>
        }
        else
        {
            <h1>It was a draw</h1>
        }
    }
</div>
@*player actions*@
@if (Model.GameEnd == false)
{
    <div class="row">
        <div class="col-md-4">
            @using (Html.BeginForm("BlackJackDraw", "Games"))
            {
                //passing blackjack model
                for (int i = 0; i < Model.Cards.Count; i++)
                {
                    @Html.HiddenFor(model => model.Cards[i]);
                }
                Html.HiddenFor(model => model.DidPlayerDoubleDown);
                Html.HiddenFor(model => model.DidPlayerStand);
                Html.HiddenFor(model => model.DidPlayerWin);
                Html.HiddenFor(model => model.GameEnd);
                Html.HiddenFor(model => model.HouseCount);
                Html.HiddenFor(model => model.PlayerBet);
                Html.HiddenFor(model => model.PlayerCount);
                Html.HiddenFor(model => model.Round);
                Html.HiddenFor(model => model.HouseCardDrawn);
                Html.HiddenFor(model => model.PlayerCardDrawn);
                Html.HiddenFor(model => model.WasDraw);

                <input type="hidden" name="playerCount" value="@Model.PlayerCount" />
                <input type="hidden" name="houseCount" value="@Model.HouseCount" />
                <input type="hidden" name="betAmount" value="@Model.PlayerBet" />
                <input type="hidden" name="Round" value="@Model.Round" />


                <input type="submit" value="Draw" />
            }
        </div>
    </div>
    @*betting options*@
    if (User.Identity.IsAuthenticated)
    {
        <div class="row">
            <div class="col-md-4">
                @if (Model.PlayerBet == 0)
                {
                    using (Html.BeginForm("BlackJackBet", "Games"))
                    {
                        //passing blackjack model
                        for (int i = 0; i < Model.Cards.Count; i++)
                        {
                            @Html.HiddenFor(model => model.Cards[i]);
                        }
                        Html.HiddenFor(model => model.DidPlayerDoubleDown);
                        Html.HiddenFor(model => model.DidPlayerStand);
                        Html.HiddenFor(model => model.DidPlayerWin);
                        Html.HiddenFor(model => model.GameEnd);
                        Html.HiddenFor(model => model.HouseCount);
                        Html.HiddenFor(model => model.PlayerBet);
                        Html.HiddenFor(model => model.PlayerCount);
                        Html.HiddenFor(model => model.Round);
                        Html.HiddenFor(model => model.HouseCardDrawn);
                        Html.HiddenFor(model => model.PlayerCardDrawn);
                        Html.HiddenFor(model => model.WasDraw);

                        <input type="hidden" name="playerCount" value="@Model.PlayerCount" />
                        <input type="hidden" name="houseCount" value="@Model.HouseCount" />
                        <input type="hidden" name="Round" value="@Model.Round" />

                        <input type="text" name="Amount" />

                        <input type="submit" value="Bet" />
                    }
                }
                @if (Model.DidPlayerDoubleDown == false)
                {
                    using (Html.BeginForm("BlackJackDoubleDown", "Games"))
                    {
                        //passing blackjack model
                        for (int i = 0; i < Model.Cards.Count; i++)
                        {
                            @Html.HiddenFor(model => model.Cards[i]);
                        }
                        Html.HiddenFor(model => model.DidPlayerDoubleDown);
                        Html.HiddenFor(model => model.DidPlayerStand);
                        Html.HiddenFor(model => model.DidPlayerWin);
                        Html.HiddenFor(model => model.GameEnd);
                        Html.HiddenFor(model => model.HouseCount);
                        Html.HiddenFor(model => model.PlayerBet);
                        Html.HiddenFor(model => model.PlayerCount);
                        Html.HiddenFor(model => model.Round);
                        Html.HiddenFor(model => model.HouseCardDrawn);
                        Html.HiddenFor(model => model.PlayerCardDrawn);
                        Html.HiddenFor(model => model.WasDraw);

                        <input type="hidden" name="playerCount" value="@Model.PlayerCount" />
                        <input type="hidden" name="houseCount" value="@Model.HouseCount" />
                        <input type="hidden" name="Round" value="@Model.Round" />
                        <input type="hidden" name="betAmount" value="@Model.PlayerBet" />

                        <input type="submit" value="Double Down" />
                    }
                    if (ViewBag.error != null)
                    {
                        <p>@ViewBag.error</p>
                    }
                }
            </div>
        </div>
    }
}

